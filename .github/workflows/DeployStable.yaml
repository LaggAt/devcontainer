name: Deploy Stable to Docker Hub

on:
   push:
     tags:
       - '*'

jobs:
  deploy:
    name: Deploy all stable images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Login to docker hub
        if: success()
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}

      # Build
      - name: Build image [base-stable]
        if: success()
        run: |
          docker build \
            --compress \
            --no-cache \
            -t ${GITHUB_REPOSITORY}:base \
            -t ${GITHUB_REPOSITORY}:base-${IMAGE_TAG} \
            -f Base.dockerfile .

      - name: Build image [dotnet-stable]
        if: success()
        run: |
          cd Dockerfiles || exit 1
          docker build \
            --compress \
            --no-cache \
            -t ${GITHUB_REPOSITORY}:dotnet \
            -t ${GITHUB_REPOSITORY}:dotnet-${IMAGE_TAG} \
            -f Dotnet.dockerfile .

      - name: Build image [netdaemon-stable]
        if: success()
        run: |
          cd Dockerfiles || exit 1
          docker build \
            --compress \
            --no-cache \
            -t ${GITHUB_REPOSITORY}:netdaemon 
            -t ${GITHUB_REPOSITORY}:netdaemon-${IMAGE_TAG} \
            -f Netdaemon.dockerfile .

      - name: Build image [python-stable]
        if: success()
        run: |
          cd Dockerfiles || exit 1
          docker build \
            --compress \
            --no-cache \
            -t ${GITHUB_REPOSITORY}:python \
            -t ${GITHUB_REPOSITORY}:python-${IMAGE_TAG} \
            -f Python.dockerfile .

      - name: Build image [integration-stable]
        if: success()
        run: |
          cd Dockerfiles || exit 1
          docker build \
            --compress \
            --no-cache \
            -t ${GITHUB_REPOSITORY}:integration \
            -t ${GITHUB_REPOSITORY}:integration-${IMAGE_TAG} \
            -f Integration.dockerfile .

      - name: Build image [frontend-stable]
        if: success()
        run: |
          cd Dockerfiles || exit 1
          docker build \
            --compress \
            --no-cache \
            -t ${GITHUB_REPOSITORY}:frontend \
            -t ${GITHUB_REPOSITORY}:frontend-${IMAGE_TAG} \
            -f Frontend.dockerfile .

      - name: Build image [monster-stable]
        if: success()
        run: |
          cd Dockerfiles || exit 1
          docker build \
            --compress \
            --no-cache \
            -t ${GITHUB_REPOSITORY}:monster \
            -t ${GITHUB_REPOSITORY}:monster-${IMAGE_TAG} \
            -f Monster.dockerfile .


      # Deploy versions
      - name: Push to docker registry [base-version]
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:base-${IMAGE_TAG}

      - name: Push to docker registry [dotnet-version]
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:dotnet-${IMAGE_TAG}

      - name: Push to docker registry [netdaemon-version]
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:netdaemon-${IMAGE_TAG}

      - name: Push to docker registry [python-version]
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:python-${IMAGE_TAG}

      - name: Push to docker registry [integration-version]
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:integration-${IMAGE_TAG}

      - name: Push to docker registry [frontend-version]
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:frontend-${IMAGE_TAG}

      - name: Push to docker registry [monster-version]
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${GITHUB_REPOSITORY}:monster-${IMAGE_TAG}